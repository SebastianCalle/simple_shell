#include "header.h"

static node_t *env_s;

void _listed_env(void)
{
	int i;

	for (i = 0; environ[i] != NULL; i++)
	{
		_add_node_end(&env_s, environ[i]);
	}
}

int (*core_shell(char *arg))(int argc, char **args, node_t **link)
{
	int i;
	core_t core[] = {
		{"env", _print_list},
		{NULL, NULL}
	};

        for (i = 0; core[i].str; i++)
		if (strcmp(core[i].str, arg) == 0)
			return (core[i].f);
}

int main(int argc, char **argv)
{
	_listed_env();
	core_shell(argv[1])(argc, argv, &env_s);

	return (0);
}

node_t *_add_node_end(node_t **head, char *str)
{
	node_t *new = NULL;
	node_t *last = NULL;

	if (str == NULL)
		str = "";

	new = malloc(sizeof(node_t));
	if (new == NULL)
	{
		return (NULL);
	}

	new->s = strdup(str);
	new->next = NULL;

	last = (*head);

	if (*head)
	{
		while (last->next)
			last = last->next;

		last->next = new;
	}
	else
		(*head) = new;

	return (new);
}

int _print_list(int a, char **b, node_t **head)
{
	int i;

	if (*head == NULL)
		return (-1);

	for (i = 0; *head; i++)
	{
		puts((*head)->s);
		putchar(10);
		*head = (*head)->next;
	}
	printf("--------------------------------\n");
	printf("Number %d\n", a);
	for (i = 0; b[i]; i++)
		printf("%s\n", b[i]);

	return (i);
}
